{"title":"webpack3.x+vue2.x+sass项目中，sass提取全局引用","date":"2018-12-14T13:33:40.000Z","excerpt":"","slug":"sassExtract","comments":true,"dropcap":true,"tags":["vue2.x","sass","webpack3.x"],"categories":["webpack"],"updated":"2019-12-01T13:34:23.000Z","content":"<p>接近年底，工作没有那么忙，业余时间就比较多了，就想着把小demo整合到一起，自己搭建一个项目。<br>在网上找了两篇博客作为参考：<a href=\"https://blog.csdn.net/lily2016n/article/details/75309492\" target=\"_blank\" rel=\"noopener\">在vue中使用sass的配置的方法</a>、<a href=\"https://blog.csdn.net/qq_27868533/article/details/79651659\" target=\"_blank\" rel=\"noopener\">vue引入sass全局变量</a></p>\n<h1 id=\"基础依赖包安装\"><a href=\"#基础依赖包安装\" class=\"headerlink\" title=\"基础依赖包安装\"></a><strong>基础依赖包安装</strong></h1><p>安装sass-loader和node-sass(sass-loader依赖于node-sass)。-D是–save-dev的缩写，依赖包在开发环境和生产环境都需要；对应的-S是–save的缩写，只需在生产环境需要。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cnpm i node-sass sass-loader -D</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"webpack配置\"><a href=\"#webpack配置\" class=\"headerlink\" title=\"webpack配置\"></a><strong>webpack配置</strong></h1><p>在build文件夹下的webpack.base.conf.js的rules里面添加以下配置代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  test: <span class=\"regexp\">/\\.sass$/</span>,</span><br><span class=\"line\">  loaders: [<span class=\"string\">'style'</span>, <span class=\"string\">'css'</span>, <span class=\"string\">'sass'</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"写sass样式\"><a href=\"#写sass样式\" class=\"headerlink\" title=\"写sass样式\"></a><strong>写sass样式</strong></h1><p>在App.vue文件中写上sass代码，测试配置是否成功。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"scss\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    $backgroundColor: #000;</span></span><br><span class=\"line\"><span class=\"undefined\">    body&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        background-color: $backgroundColor;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"启动项目看效果\"><a href=\"#启动项目看效果\" class=\"headerlink\" title=\"启动项目看效果\"></a><strong>启动项目看效果</strong></h1><p>重启项目(cnpm run dev)会发现页面背景色变成黑色了。<br>如图：<img src=\"/2018/12/14/sassExtract/config.png\" alt=\"\"></p>\n<h1 id=\"全局引用sass变量\"><a href=\"#全局引用sass变量\" class=\"headerlink\" title=\"全局引用sass变量\"></a><strong>全局引用sass变量</strong></h1><p>全局样式如下图<br><img src=\"/2018/12/14/sassExtract/commonscss.png\" alt=\"\"><br>在main.js中全局引入一个scss文件，然后在任何需要用到sass变量的文件中引用变量即可。<br><img src=\"/2018/12/14/sassExtract/mainjs.png\" alt=\"\"><br><img src=\"/2018/12/14/sassExtract/usage.png\" alt=\"\"><br>在其中定义变量在其他组件或者页面中引用报变量未定义错误，其他的样式可以正常显示，显然是编译的问题。</p>\n<h1 id=\"安装sass-resources-loader\"><a href=\"#安装sass-resources-loader\" class=\"headerlink\" title=\"安装sass-resources-loader\"></a><strong>安装sass-resources-loader</strong></h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cnpm i sass-resources-loader -D</span><br></pre></td></tr></table></figure>\n<h1 id=\"修改sass配置\"><a href=\"#修改sass配置\" class=\"headerlink\" title=\"修改sass配置\"></a><strong>修改sass配置</strong></h1><p>在 build 文件夹下找到 util.js 修改sass编译器loader的配置<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 全局文件引入 当然只想编译一个文件的话可以省去这个函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">resolveResource</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> path.resolve(__dirname, <span class=\"string\">'../src/assets/css/'</span> + name);  <span class=\"comment\">//我把提取的样式放在src/assets/css下</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generateSassResourceLoader</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> loaders = [</span><br><span class=\"line\">        cssLoader,</span><br><span class=\"line\">        <span class=\"string\">'sass-loader'</span>,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            loader: <span class=\"string\">'sass-resources-loader'</span>,</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">                resources: [resolveResource(<span class=\"string\">'common.scss'</span>)]  <span class=\"comment\">// 多个文件时用数组的形式传入，单个文件时可以直接使用 path.resolve(__dirname, '../src/assets/css/common.scss'</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (options.extract) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ExtractTextPlugin.extract(&#123;  <span class=\"comment\">//要确保util.js有引入ExtractTextPlugin这个插件，通常都是有的</span></span><br><span class=\"line\">            use: loaders,</span><br><span class=\"line\">            fallback: <span class=\"string\">'vue-style-loader'</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [<span class=\"string\">'vue-style-loader'</span>].concat(loaders)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>修改sass配置的调用为 generateSassResourceLoader()<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    css: generateLoaders(),</span><br><span class=\"line\">    postcss: generateLoaders(),</span><br><span class=\"line\">    less: generateLoaders(<span class=\"string\">'less'</span>),</span><br><span class=\"line\">        <span class=\"comment\">// vue-cli默认sass配置</span></span><br><span class=\"line\">        <span class=\"comment\">// sass: generateLoaders('sass', &#123; indentedSyntax: true &#125;), </span></span><br><span class=\"line\">        <span class=\"comment\">// scss: generateLoaders('sass'),</span></span><br><span class=\"line\">    <span class=\"comment\">// 新引入的sass-resources-loader</span></span><br><span class=\"line\">    sass: generateSassResourceLoader(),</span><br><span class=\"line\">    scss: generateSassResourceLoader(),</span><br><span class=\"line\">    stylus: generateLoaders(<span class=\"string\">'stylus'</span>),</span><br><span class=\"line\">    styl: generateLoaders(<span class=\"string\">'stylus'</span>)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/2018/12/14/sassExtract/utils.png\" alt=\"\"></p>\n<h1 id=\"引入文件，重启项目\"><a href=\"#引入文件，重启项目\" class=\"headerlink\" title=\"引入文件，重启项目\"></a><strong>引入文件，重启项目</strong></h1><p>修改配置文件都需要重启项目。重启项目没有报错，全局样式生效<br><img src=\"/2018/12/14/sassExtract/result.png\" alt=\"\"></p>\n","prev":{"title":"vue混入mixins用法小结","slug":"vuemixins"},"next":{"title":"EChartsLineBar","slug":"EChartsLineBar"},"link":"/sassExtract","toc":[{"title":"<strong>基础依赖包安装</strong>","id":"基础依赖包安装","index":"1"},{"title":"<strong>webpack配置</strong>","id":"webpack配置","index":"2"},{"title":"<strong>写sass样式</strong>","id":"写sass样式","index":"3"},{"title":"<strong>启动项目看效果</strong>","id":"启动项目看效果","index":"4"},{"title":"<strong>全局引用sass变量</strong>","id":"全局引用sass变量","index":"5"},{"title":"<strong>安装sass-resources-loader</strong>","id":"安装sass-resources-loader","index":"6"},{"title":"<strong>修改sass配置</strong>","id":"修改sass配置","index":"7"},{"title":"<strong>引入文件，重启项目</strong>","id":"引入文件，重启项目","index":"8"}]}