{"title":"vue2.x中的：is和is的区别","date":"2018-11-02T06:08:42.000Z","excerpt":"","slug":"vueis","comments":true,"dropcap":true,"tags":["vue2.x"],"categories":["vue"],"updated":"2019-12-01T13:34:23.000Z","content":"<p>最近，工作之余在翻阅vue.js的官方文档，在查看到<a href=\"https://cn.vuejs.org/v2/guide/components.html#动态组件\" target=\"_blank\" rel=\"noopener\">动态组件</a>和<a href=\"https://cn.vuejs.org/v2/guide/components.html#解析-DOM-模板时的注意事项\" target=\"_blank\" rel=\"noopener\">解析 DOM 模板时的注意事项</a>的时候，讲到一个特殊的is特性，觉得很有意思，就来写一篇自己理解的总结。</p>\n<h1 id=\"现场\"><a href=\"#现场\" class=\"headerlink\" title=\"现场\"></a><strong>现场</strong></h1><p><img src=\"/2018/11/02/vueis/dynamicComponent.jpg\" alt=\"动态组件\"><br><img src=\"/2018/11/02/vueis/resolveDOM.jpg\" alt=\"解析-DOM-模板时的注意事项\"></p>\n<h1 id=\"写栗子实践\"><a href=\"#写栗子实践\" class=\"headerlink\" title=\"写栗子实践\"></a><strong>写栗子实践</strong></h1><p>其实看过之后，其实是有点懵的，这两个有啥区别，怎么用呢？</p>\n<p>仔细分析，没那么难懂，参考<a href=\"https://blog.csdn.net/qq_39397845/article/details/81062475\" target=\"_blank\" rel=\"noopener\">这篇博客</a>，我们也写一个栗子来试试</p>\n<p>我们平时用局部注册的情况更多些，那我就写一个局部注册组件的栗子。</p>\n<p><img src=\"/2018/11/02/vueis/pandect.jpg\" alt=\"\"></p>\n<h1 id=\"替换部分内容看渲染结果\"><a href=\"#替换部分内容看渲染结果\" class=\"headerlink\" title=\"替换部分内容看渲染结果\"></a><strong>替换部分内容看渲染结果</strong></h1><ol>\n<li><p>单独看自定义组件componentA，把is=”componentA”改成is=”componentB”，会发现这部分的内容由原来的组件componentA的内容变成了componentB的内容<br><img src=\"/2018/11/02/vueis/exchangeAB.jpg\" alt=\"\"><br>这里我们会发现，虽然标签是&lt; componetA&gt;,但是没有显示componentA的内容，而是显示componentB的内容，说明vue在渲染组件的内容时，是有检测is特性的，如果有被赋值那就渲染该值对应的组件的内容，如果没有is特性，那就渲染标签对应的组件内容。<br>那么如果把&lt; componetA&gt;换成&lt; div&gt;、&lt; p&gt;等等符合W3C的标签都能正常显示is被赋值的组件的内容！这样就与<a href=\"https://cn.vuejs.org/v2/guide/components.html#解析-DOM-模板时的注意事项\" target=\"_blank\" rel=\"noopener\">解析 DOM 模板时的注意事项</a>不谋而合了！</p>\n</li>\n<li><p>单独看自定义组件componentB，在父组件中能看到，是：is,这是数据绑定，那么被绑定的值必须在当前实例的data中定义。栗子中绑定的是two，two的值是什么那componentB就渲染什么。<br><img src=\"/2018/11/02/vueis/exchangeTWO.jpg\" alt=\"\"><br>同样，如果把&lt; componetB&gt;换成&lt; div&gt;、&lt; p&gt;等等符合W3C的标签都能正常显示：is被赋值的组件的内容！这样就是<a href=\"https://cn.vuejs.org/v2/guide/components.html#动态组件\" target=\"_blank\" rel=\"noopener\">动态组件</a>了！</p>\n</li>\n</ol>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a><strong>最后</strong></h1><p>举栗子实践分析了一番，总算明白了一些，总结一下：</p>\n<ul>\n<li>相同点：都能实现动态组件的效果</li>\n<li>不同点：：is是数据绑定，绑定的值必须在data中定义，is被赋值的值须是子组件的名称</li>\n</ul>\n","prev":{"title":"vue的过渡小记（多元素、多组件）","slug":"vuetransition"},"next":{"title":"JS字符串编码","slug":"jsencode"},"link":"/vueis","toc":[{"title":"<strong>现场</strong>","id":"现场","index":"1"},{"title":"<strong>写栗子实践</strong>","id":"写栗子实践","index":"2"},{"title":"<strong>替换部分内容看渲染结果</strong>","id":"替换部分内容看渲染结果","index":"3"},{"title":"<strong>最后</strong>","id":"最后","index":"4"}]}