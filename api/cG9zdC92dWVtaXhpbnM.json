{"title":"vue混入mixins用法小结","date":"2019-05-28T08:45:47.000Z","excerpt":"","slug":"vuemixins","comments":true,"dropcap":true,"tags":["vue2.x","mixins"],"categories":["vue"],"updated":"2019-12-01T13:34:23.000Z","content":"<p>距离上次更新博客将近半年了，因为年后开始做一个大项目，多个产品经理各自负责一个或多个模块，一个模块相当于之前项目的整体。这次我一个人做一个模块，压力有些大，每天只想着把功能做出来，没有时间总结。<br>此次的一个大项目中用到了vue的混入（mixins），业余时间记录下来它的用法</p>\n<h1 id=\"为什么要用混入（mixins）\"><a href=\"#为什么要用混入（mixins）\" class=\"headerlink\" title=\"为什么要用混入（mixins）\"></a><strong>为什么要用混入（mixins）</strong></h1><p>页面中频繁使用某一种功能时，为了精简代码，就需要用到混入。<br>比如我们项目中会频繁用到elementUI的message消息提示，一些操作反馈的成功、失败、警告都要给用户消息提示，如果每个前端程序员在自己的每一个页面的每一个操作的执行代码中调用message组件的方法，代码量会很大。</p>\n<h1 id=\"使用对比\"><a href=\"#使用对比\" class=\"headerlink\" title=\"使用对比\"></a><strong>使用对比</strong></h1><p>不用mixins调用message方法，5行代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.$message(&#123;</span><br><span class=\"line\">    message: <span class=\"string\">'提示文字'</span>,</span><br><span class=\"line\">    showClose: <span class=\"literal\">true</span>, <span class=\"comment\">// 是否显示关闭按钮，true显示</span></span><br><span class=\"line\">    customClass: <span class=\"string\">'message-info-warn'</span> <span class=\"comment\">// 自定义样式类名</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>用mixins调用message方法，1行代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.messageSuccess(<span class=\"string\">'成功的提示文字'</span>);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"如何实现\"><a href=\"#如何实现\" class=\"headerlink\" title=\"如何实现\"></a><strong>如何实现</strong></h1><h3 id=\"混入function\"><a href=\"#混入function\" class=\"headerlink\" title=\"混入function\"></a>混入function</h3><p>在src目录下新建mixins文件，在此文件下新建message.js，里面写上相应的混入代码，如下图：<br><img src=\"/2019/05/28/vuemixins/mixins0.png\" alt=\"\"></p>\n<h3 id=\"调用\"><a href=\"#调用\" class=\"headerlink\" title=\"调用\"></a>调用</h3><p>在需要用到的文件中引入message.js，然后注册，最后调用就OK。如图所示：<br><img src=\"/2019/05/28/vuemixins/mixins1.png\" alt=\"\"><br>点击相应的按钮弹出相应类型的消息提示：<br><img src=\"/2019/05/28/vuemixins/mixins2.png\" alt=\"\"></p>\n<h3 id=\"样式调整\"><a href=\"#样式调整\" class=\"headerlink\" title=\"样式调整\"></a>样式调整</h3><p>这里我写了两个样式文件，一个是变量，一个是我们这里需要的消息提示的样式（里面用到了变量），都在main.js中引用。<br><img src=\"/2019/05/28/vuemixins/multiplescss.png\" alt=\"\"><br>再刷新页面点击相应的按钮弹出相应类型的消息提示：<br><img src=\"/2019/05/28/vuemixins/tips.png\" alt=\"\"></p>\n","prev":{"title":"javaScript的继承方案","slug":"jsInherit"},"next":{"title":"webpack3.x+vue2.x+sass项目中，sass提取全局引用","slug":"sassExtract"},"link":"/vuemixins","toc":[{"title":"<strong>为什么要用混入（mixins）</strong>","id":"为什么要用混入（mixins）","index":"1"},{"title":"<strong>使用对比</strong>","id":"使用对比","index":"2"},{"title":"<strong>如何实现</strong>","id":"如何实现","index":"3"}]}